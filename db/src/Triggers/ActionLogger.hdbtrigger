TRIGGER after_clearing_status_log_change
    AFTER INSERT OR UPDATE ON "ATOM_DB_FINANCE_CLEARINGSTATUSLOG"
REFERENCING NEW ROW newrow FOR EACH ROW
    BEGIN
    
        INSERT INTO "ATOM_DB_FINANCE_ACTIONLOGGER" (
            "ID", "CREATEDAT", "CREATEDBY", "MODIFIEDAT", "MODIFIEDBY", 
 "UNIQUECLEARINGIDENTIFIER",
 "CLEARINGTYPE",
 "EXTREF",
 "INTREF",
 "TRTYPE",
 "BITREF",
 "ENDORSEMENTREF",
 "PREMIUMID",
 "POLICYNO",
 "INSTALLMENT",
 "UCR",
 "CLAIMREF",
 "TRREF",
 "MEMBERBPID",
 "DOCUMENTNO",
 "ITEMNO",
 "REPITEM",
 "SUBITEM",
 "AMOUNTCLEARED",
 "ROERECCURR",
 "DELTADUEROE",
 "ORIGINALCURRENCY",
 "EXPECTEDPAYCURRENCY",
 "CLEAREDBY",
 "CREATEDDOCUMENTS",
 "STATUS",
 "ADDITIONALINFO"
        ) VALUES (
            SYSUUID, :newrow."MODIFIEDAT", :newrow."MODIFIEDBY", :newrow."MODIFIEDAT", :newrow."MODIFIEDBY", 
 :newrow."UNIQUECLEARINGIDENTIFIER",
 :newrow."CLEARINGTYPE",
 :newrow."EXTREF",
 :newrow."INTREF",
 :newrow."TRTYPE",
 :newrow."BITREF",
 :newrow."ENDORSEMENTREF",
 :newrow."PREMIUMID",
 :newrow."POLICYNO",
 :newrow."INSTALLMENT",
 :newrow."UCR",
 :newrow."CLAIMREF",
 :newrow."TRREF",
 :newrow."MEMBERBPID",
 :newrow."DOCUMENTNO",
 :newrow."ITEMNO",
 :newrow."REPITEM",
 :newrow."SUBITEM",
 :newrow."AMOUNTCLEARED",
 :newrow."ROERECCURR",
 :newrow."DELTADUEROE",
 :newrow."ORIGINALCURRENCY",
 :newrow."EXPECTEDPAYCURRENCY",
 :newrow."CLEAREDBY",
 :newrow."CREATEDDOCUMENTS",
 :newrow."STATUS",
 :newrow."ADDITIONALINFO"
        );
    END;